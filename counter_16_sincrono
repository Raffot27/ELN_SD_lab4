use ieee.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

entity counter_16_sincrono is
	generic ( N : integer:=16);
	port 
		(
		Enable, CLK, Clear: in std_logic; 
	   Segmenti0, Segmenti1, Segmenti2, Segmenti3 : out std_logic_vector(6 downto 0)
		);
		end counter_16_sincrono;
		
architecture struct of counter_16_sincrono is
signal Q : unsigned(N-1 downto 0);

component decoder_bin_exa
port
		(Q   : IN unsigned (3 downto 0);
			Segmenti : OUT std_logic_vector (6 downto 0)
		);
end component;

	begin
		process (clk, clear)
			begin
				if (clear = '1') then
					Q <= (others => '0');
				elsif(CLK'event and CLK='1') then
					if(Enable = '1') then
                Q <= Q + 1;
            end if;
			end if;
		end process;
Decod0 : decoder_bin_exa port map (Q(3 downto 0), Segmenti0);
Decod1 : decoder_bin_exa port map (Q(7 downto 4), Segmenti1);
Decod2 : decoder_bin_exa port map (Q(11 downto 8), Segmenti2);
Decod3 : decoder_bin_exa port map (Q(15 downto 12), Segmenti3);		
	end struct;
